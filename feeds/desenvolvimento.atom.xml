<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Caio Carrara - desenvolvimento</title><link href="/" rel="alternate"></link><link href="/feeds/desenvolvimento.atom.xml" rel="self"></link><id>/</id><updated>2014-10-09T10:00:00-03:00</updated><entry><title>Palestra Software Crafsmanship na FATEC Sorocaba</title><link href="/palestra-software-craftsmanship-na-fatec-sorocaba.html" rel="alternate"></link><published>2014-10-09T10:00:00-03:00</published><updated>2014-10-09T10:00:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-10-09:/palestra-software-craftsmanship-na-fatec-sorocaba.html</id><summary type="html">&lt;p&gt;O Manifesto for Software Craftsmanship não é tão popular hoje em dia quanto o Agile Manifesto. Entretanto, acredito que os princípios defendidos pelo Craftsmanship são tão importantes quanto os do Agile. Visando apresentar o Artesanato de Software, bem como alguns outros princípios para os graduandos em Análise e Desenvolvimento de Sistemas da FATEC De Sorocaba, no dia 08/10/2014 apresentei a palestra Artesanato de Software que compartilho aqui agora.&lt;/p&gt;</summary><content type="html">&lt;p&gt;O &lt;a href="http://manifesto.softwarecraftsmanship.org/"&gt;Manifesto for Software Craftsmanship&lt;/a&gt; não é tão popular hoje em dia quanto o &lt;a href="http://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt;. Entretanto, acredito que os princípios defendidos pelo Craftsmanship são tão importantes quanto os do Agile. Visando apresentar o &lt;em&gt;Artesanato de Software&lt;/em&gt;, bem como alguns outros princípios para os graduandos em &lt;a href="http://fatecsorocaba.edu.br/topo/cursos/ads.asp"&gt;Análise e Desenvolvimento de Sistemas da FATEC De Sorocaba&lt;/a&gt;, no dia 08/10/2014 apresentei a palestra &lt;strong&gt;Artesanato de Software&lt;/strong&gt; que compartilho aqui agora:  &lt;/p&gt;
&lt;script async class="speakerdeck-embed" data-id="9e019c8031df01327f262efaeef44115" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;</content><category term="desenvolvimento"></category><category term="craftsmanship"></category></entry><entry><title>Meu primeiro Hackathon</title><link href="/meu-primeiro-hackathon.html" rel="alternate"></link><published>2014-08-24T15:43:00-03:00</published><updated>2014-08-24T15:43:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-08-24:/meu-primeiro-hackathon.html</id><summary type="html">&lt;p&gt;Eu participei do meu primeiro Hackathon da Transparência Brasil. Foi uma experiência incrível e resolvi contar um pouco o que a ONG Transparência Brasil e a Sensedia fizeram lá na sede do Google Brasil.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ontem ocorreu o primeiro &lt;a href="http://dev.transparencia.org.br/api-portal/hackathon" title="Hackathon transparência Brasil"&gt;Hackathon Transparência
Brasil&lt;/a&gt;.
O evento foi realizado pela &lt;a href="http://transparencia.org.br/" title="Transparência Brasil"&gt;ONG Transparência
Brasil&lt;/a&gt; (TBrasil)
em conjunto com a &lt;a href="http://sensedia.com/br/" title="Sensedia"&gt;Sensedia&lt;/a&gt; e
contou com o apoio do Google Brasil que ofereceu toda a infra-estrutura
para os participantes em sua sede.&lt;/p&gt;
&lt;p&gt;"Hackathon" é uma palavra que nasceu da composição de duas outras em
inglês: &lt;em&gt;Hack&lt;/em&gt; e &lt;em&gt;Marathon&lt;/em&gt;, para designar eventos onde desenvolvedores
de software - não somente programadores, mas também designers, e
gerentes de projetos - juntam-se e colaboram intensivamente para a
construção de projetos de software e/ou hardware. Tradicionalmente
Hackathons tem duração mínima de um dia mas podem chegar até uma semana.
Os objetivos de um hackathon pode ser diverso, para maior noção eu
recomendo a leitura do &lt;a href="http://en.wikipedia.org/wiki/Hackathon"&gt;verbete hackathon na
Wikipedia&lt;/a&gt;. Mais do que
simplesmente programar, o termo inglês hack também designa exploração e
descoberta.&lt;/p&gt;
&lt;p&gt;Descobrir como melhor utilizar os dados disponibilizados pelas APIs da
TBrasil foi justamente o intuito do Hackathon de ontem. As APIs abertas
da Transparência Brasil fornecem informações detalhadas e estatísticas
sobre candidatos a presidência, governo estadual, senado e de candidatos
à reeleição, além de informações sobre os  candidatos a deputado federal
e estadual. Todos os participantes do hackathon ganharam um Chromecast
(dias contados para os caros projetores!) e a equipe vencedora ganhou um
Chromebook cada um. Os critérios para o julgamento do melhor produto
foram: impacto da proposta de valor, qualidade do produto final e mérito
técnico como forma de desempate.&lt;/p&gt;
&lt;p&gt;As inscrições para o Hackathon poderiam ser feitas por equipes
previamente formadas ou de forma individual. Eu me inscrevi
individualmente e na hora foi realizado sorteio para juntar os
participantes que estavam sozinhos. Em um primeiro momento eu me senti
um pouco inseguro em partir para o meu primeiro hackathon sozinho, mas
ao final do dia eu só pude comprovar que foi o melhor que poderia ter
feito.&lt;/p&gt;
&lt;p&gt;Depois dos momentos "eu no Google" com poses para as fotos e do café da
manhã (com ovos e bacon!) começou a organização das equipes. A grande
maioria já estava formada previamente, mas houveram algumas que foram
formadas no dia. A minha equipe foi uma dessas.&lt;/p&gt;
&lt;p&gt;Éramos em quatro totalmente desconhecidos: &lt;a href="https://twitter.com/rafanunes" title="Rafael Nunes twitter"&gt;Rafael
Nunes&lt;/a&gt;, Julia,
Taiolor (sim, é o nome dele) e eu. Cada um com um histórico técnico e
cultural diferente o que fez com que além do desafio do próprio
hackathon tivéssemos que também descobrir como trabalhar juntos. Uma
maratona de programação tende a requisitar profissionais de alto
desempenho, bem como equipes de alto desempenho, para que consigam
atingir os desafios propostos. Sabemos que equipes de alto desempenho
possuem como premissa um avançado grau de entrosamento, justamente o que
não tínhamos. Mas a ideia era superar desafio, então seguimos em frente!&lt;/p&gt;
&lt;p&gt;Em alguns minutos definimos uma ideia: disponibilizar uma forma com que
os eleitores pudessem selecionar um candidato, para qualquer cargo, de
acordo com alguns filtros que julgamos pertinentes. Para que não
precisassem toda hora filtrar para lembrar suas preferências, os
usuários também poderiam marcar, de forma privada, um candidato que
lhe interessasse. Se a proposta era ajudar na seleção do candidato, já
definimos também o nome da equipe: Seleição! (que criatividade einh!).
Logo em seguida precisávamos definir com qual tecnologia
implementaríamos a ideia, para minha alegria escolhemos Python!!!
Usaríamos a plataforma do
&lt;a href="https://cloud.google.com/products/app-engine/" title="AppEngine"&gt;AppEngine&lt;/a&gt;
do Google para publicar.&lt;/p&gt;
&lt;p&gt;Mas nem tudo são flores, a equipe não tinha nenhum designer ou
desenvolvedor front-end. Porém, como iríamos utilizar o
&lt;a href="http://jinja.pocoo.org/" title="Jinja Pocoo"&gt;Jinja&lt;/a&gt; como template engine e eu
tinha o conhecimento de Jinja e um pouco de
&lt;a href="http://getbootstrap.com/" title="Bootsstrap"&gt;bootstrap&lt;/a&gt;, acabei ficando com a
árdua tarefa! hahaha. Então já tinhamos a divisão das tarefas: o Rafael
com a comunicação do nosso aplicativo com a API da TBrasil, eu mostrando
os dados na tela e interação do usuário, a Julia me disponibilizando
alguns end points e o Taiolor pensando nos filtros e desenhando a
estrutura das páginas. Foi assim praticamente o dia todo e é
impressionante a sensação da passagem do tempo em um ambiente desses.
Particularmente eu nem senti o tempo passar.&lt;/p&gt;
&lt;p&gt;Ao final do dia estávamos com um início de aplicativo rodando e
conseguimos apresentar muito bem! Chegamos a publicar em
&lt;a href="http://seleicao.appspot.com/"&gt;seleicao.appspot.com&lt;/a&gt;, mas quando rodamos
um job para popular nosso datastore estouramos o limite (free) de
escrita no AppEngine =P. Todo histórico do nosso trabalho e o código
fonte está no
&lt;a href="https://github.com/rafaelnunes/seleicao" title="Github Seleição"&gt;GitHub&lt;/a&gt;
também. Fizemos um ótimo trabalho juntos e colaboramos intensivamente
para algo minimamente utilizável que consumia as APIs da TBrasil. Meu
objetivo estava concluído!&lt;/p&gt;
&lt;p&gt;A premiação, em minha opinião, foi justa! Ganhou uma equipe que
desenvolveu um
&lt;a href="https://chrome.google.com/webstore/detail/greenhouse/ifomhmgandipmpnelclcmbefppopfklc?hl=en" title="Greenhouse chrome extension"&gt;Greenhouse&lt;/a&gt; mas
com os dados da TPBrasil. Uma ferramenta de fácil acesso e que pode
ajudar muito o eleitor sem muitos esforços para a utilização.&lt;/p&gt;
&lt;p&gt;Como falei, ao final do dia eu pude voltar para casa muito satisfeito,
muito mais do que se eu tivesse ido com uma equipe formada. Eu não
voltei com um Chromebook na bagagem, mas voltei com história pra contar.
Mais do que isso, eu conheci, interagi, colaborei e trabalhei com gente
diferente e com histórias contrastantes e muito legais! Eu poderia ter
formado uma equipe, mas preferi ir pra conhecer e programar com gente
desconhecida. Conhecer novas ideias e trocar experiências. Para ficar
ainda melhor tudo isso ocorreu com muito &lt;em&gt;self&lt;/em&gt; explícito!&lt;/p&gt;
&lt;p&gt;Quem tiver a oportunidade de participar de um Hackathon, não deixe
passar! E se não estiver tão interessado na premiação, vá sozinho, de
mente aberta e disposto a fazer coisas que não faz geralmente. Pense em
uma ideia na hora, colabore e trabalhe arduamente para fazer algo
funcional.&lt;/p&gt;
&lt;p&gt;Para encerrar, só posso dizer que foi fenomenal! A cada dia eu gosto
mais de Python pela facilidade que a linguagem me dá em expressar a
ideia do software que tenho na mente sem deixar de produzir software de
ótima qualidade. O dia-a-dia de um desenvolvedor sério e ético já é
muito difícil, ter ainda mais dificuldade de colocar suas ideias em
formato de código é inadmissível! Python e a comunidade envolvida
possibilitam que essa dificuldade seja muito menor.&lt;/p&gt;
&lt;p&gt;Obrigado TBrasil, Sensedia, Google Brasil e em especial Rafael Nunes,
Julia e Taiolor!&lt;/p&gt;
&lt;p&gt;Nos vemos no próximo Hackathon!&lt;/p&gt;</content><category term="appengine"></category><category term="hackathon"></category><category term="python"></category></entry><entry><title>[Dica] Instalando PostgreSQL no Fedora 19</title><link href="/instalando-postgresql-no-fedora-19.html" rel="alternate"></link><published>2014-04-02T22:00:00-03:00</published><updated>2014-04-02T22:00:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-04-02:/instalando-postgresql-no-fedora-19.html</id><summary type="html">&lt;p&gt;Esse post tem como objetivo ficar de nota para posterior registro de como instalar o PostgreSQL no Fedora 19.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fala ai galera! Beleza?&lt;/p&gt;
&lt;p&gt;Hoje trago uma dica rápida e que não é bem muita novidade, mas é sempre
últil ter um guia rápido assim quando queremos fazer uma nova
instalação. Aqui irei considerar a minha distribuição Linux favorita, o
Fedora, mas pode ajudar para as demais distros também.&lt;/p&gt;
&lt;p&gt;Primeiro, baixe e instale os pacotes do PostgreSQL (lembrando que o
símbolo # indica prompt com nível root):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# yum install postgresql postgresql-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Terminando a instalação, vamos iniciar o banco de dados, habilitar e
iniciar o serviço do PostgreSQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# postgresql-setup initdb  &lt;/span&gt;
&lt;span class="c1"&gt;# systemctl enable postgresql.service  &lt;/span&gt;
&lt;span class="c1"&gt;# systemctl start postgresql.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora vamos acessar o prompt com o usuário &lt;em&gt;postgres &lt;/em&gt;para podermos
cadastrar uma senha para esse usuário na base:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# su postgres&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos agora iniciar o prompt do PostgreSQL e cadastrar uma senha para a
ROLE &lt;em&gt;postgres&lt;/em&gt; e sair:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pgsql  
$ postgres: ALTER ROLE postgres WITH ENCRYPTED PASSWORD &lt;span class="s1"&gt;&amp;#39;suasenha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
$ postgres: &lt;span class="se"&gt;\\&lt;/span&gt;q  
$ &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assim voltamos para o prompt root, vamos mudar o método de autenticação
do banco para utilizarmos md5. Basta editar o arquivo
&lt;em&gt;&lt;code&gt;/var/lib/pgsql/data/pg_hba.conf&lt;/code&gt;&lt;/em&gt; e mudar as configurações
&lt;em&gt;peer &lt;/em&gt;e &lt;em&gt;ident&lt;/em&gt; para &lt;em&gt;md5&lt;/em&gt; conforme o exemplo abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# TYPE DATABASE USER ADDRESS METHOD&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;quot;local&amp;quot; is for Unix domain socket connections only local all all md5  &lt;/span&gt;
&lt;span class="c1"&gt;# IPv4 local connections:  &lt;/span&gt;
    host all all &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1/32 md5  
&lt;span class="c1"&gt;# IPv6 local connections:  &lt;/span&gt;
    host all all ::1/128 md5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Salve o arquivo e reinicie o serviço do PostgreSQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl restart postgresql.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É possível testar a nova configuração tentando acessar o console do
PostgreSQL com o usuário postgres:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pgsql -U postgres -W&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vai ser solicitada a senha. Informando-a, caso consiga acesso ao prompt,
a configuração está completa.&lt;/p&gt;
&lt;p&gt;É isso ai, abraço e até a próxima!&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="fedora"></category><category term="linux"></category><category term="postgresql"></category></entry><entry><title>Está funcionando? Não está bom!</title><link href="/esta-funcionando-nao-esta-bom.html" rel="alternate"></link><published>2014-02-19T23:15:00-03:00</published><updated>2014-02-19T23:15:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-02-19:/esta-funcionando-nao-esta-bom.html</id><summary type="html">&lt;p&gt;Desenvolver software profissionalmente, entre outras coisas, é entregar satisfação ao usuário e atender necessidades de clientes. O trabalho visto dessa forma pode ser exercido de duas maneiras: proativa ou reativa. Nesse artigo eu falo um pouco sobre as duas maneiras.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eu ainda não posso dizer que sou um profissional tão experiente, afinal
estou há pouco mais de 3 anos atuando profissionalmente com
desenvolvimento de software. Nesse pouco tempo tive a oportunidade de
passar por algumas empresas, conhecer várias pessoas entre
programadores, analistas e gerentes. Nessa
pequena jornada uma expressão que invariavelmente ouvi por onde passei é
a famigerada: "está funcionando? Então está bom!". Ou uma de suas
variações mais famosas e a preferida dos gerentes: "está funcionando?
Então não mexe!".&lt;/p&gt;
&lt;p&gt;Particularmente eu não tenho nada contra esse tipo de expressão, a não
ser que comece a se tornar cultura! Quando paro para pensar sobre a
origem desse tipo de comportamento eu imagino que possa ter surgido
durante o período de estudos e provas de algum indivíduo. Certamente
alguém teve a brilhante ideia de parar de mexer em algum programa /
projeto assim que ele passou a funcionar. Talvez esse comportamento não
pareça ser tão ruim, e até faça algum sentido, quanto estamos fazendo
algoritmos didáticos ou programas básicos "para passar em uma matéria",
mas quando essa praga de pensamento contamina o ambiente de
desenvolvimento profissional, pode ser prejudicial demais!&lt;/p&gt;
&lt;p&gt;Desenvolver software profissionalmente, entre outras coisas, é entregar
satisfação ao usuário e atender necessidades de clientes. O trabalho
visto dessa forma pode ser exercido de duas maneiras: proativa ou
reativa.&lt;/p&gt;
&lt;p&gt;A forma reativa de trabalhar é a forma com que a grande maioria (sempre
há excessões) traz consigo desde os primeiros anos de escola. O aluno
passivamente deve absorver algum conceito e reativamente praticar alguns
exercícios tentando mostrar que o conceito foi absorvido.
Isso se torna tão natural ao futuro profissional, que ao sair da
faculdade tantos ainda se comportam dessa forma. Durante muito tempo
esse perfil pode ter sido suficiente para satisfazer o mercado de
desenvolvimento de software, mas aos poucos esses antiquados
profissionais vem sendo descartados pela seleção natural do mercado.&lt;/p&gt;
&lt;p&gt;Basicamente a forma proativa de se trabalhar com desenvolvimento é
antecipando inteligentemente e de forma objetiva as necessidades do
produto de software. Quando digo necessidades me refiro tanto àquelas
requisitadas diretamente pelos clientes, quanto àquelas inerentes da
natureza do software: atender às requisições de forma satisfatória,
possuir pouco, ou nenhum, erro durante sua execução, atender às
necessidades de performance / disponibilidade, possuir boa qualidade de
código principalmente para a futura manutenabilidade e continuidade do
produto, possuir flexiblidade, dentre tantas outras. Colocando dessa
forma até parece algo simples, mas se atentar constantemente para esses
cuidados durante o dia-a-dia de trabalho enquanto tem que atender às
necessidades do negócio no qual o software está inserido não é fácil.
Requer dedicação, prática e muito cuidado.&lt;/p&gt;
&lt;p&gt;Desenvolver software para o mundo real, que resolva problemas reais e
seja usado diretamente por pessoas, vai muito além de escrever código e
resolver problemas de lógica. Atualmente produtos de software envolvem
muito mais complexidade que não pode ser resolvida de forma exata, quem
sabe um dia! O diferencial de um bom desenvolvedor de software para os
demais, dentre outras coisas, está na sua capacidade de raciocínio,
análise, criticidade, predição e contextualização do problema.&lt;/p&gt;
&lt;p&gt;Um abraço e muitos estudos pra todos nós!&lt;/p&gt;</content><category term="arquitetura"></category><category term="carreira"></category><category term="desenvolvimento"></category></entry><entry><title>Crie as suas oportunidades para aprender</title><link href="/crie-as-suas-oportunidades-para-aprender.html" rel="alternate"></link><published>2014-02-09T17:34:00-02:00</published><updated>2014-02-09T17:34:00-02:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-02-09:/crie-as-suas-oportunidades-para-aprender.html</id><summary type="html">&lt;p&gt;Não espere que surja um tempo livre na sua rotina para aprender algo novo. Vivemos várias oportunidades no dia-a-dia que poderão ser ótimas chances de conhecer algo novo, basta sermos mais sensíveis a esses momentos e criarmos nossas oportunidades para aprender.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nós somos muito acostumados a tentar separar um tempo para fazer um
curso, assistir uma palestra ou aprender uma nova linguagem de
programação, dentre outras coisas. A questão é que para quem já está
trabalhando, ou às vezes só estudando ainda, esse tempo pode nunca
aparecer. São tantas as nossas atribuições diárias que os estudos e
novos conhecimentos sempre ficam para depois, ou nunca. Hoje eu tenho a
oportunidade de estar trabalhando em uma Startup que valoriza muito o
conhecimento e nos motiva a separar um tempo semanal para focarmos em
estudos, inovação e projetos paralelos. Porém nem sempre foi assim.&lt;/p&gt;
&lt;p&gt;No ano passado eu estava trabalhando em outra empresa, com um ambiente
formidável também, porém mais clássico de focar o tempo dos
colaboradores 100% em projetos da própria empresa. Eu estava trabalhando
em um projeto que envolvia tecnologia Microsfot .Net e Adobe
ActionScript (=P). Eu nunca fui fã dessas tecnologias e, para ser
sincero, tenho muito pouco interesse em aprofundar meus conhecimentos
sobre elas. Mas comigo "missão dada é missão cumprida, parceiro", logo
fiz o meu melhor!&lt;/p&gt;
&lt;p&gt;Em uma ocasião nesse projeto apareceu uma tarefa daquelas que você
facilmente passa para o estagiário mais próximo (hahaha). Precisava ser
atualizada dezenas e dezenas de arquivos .html do help do sistema. Havia
muitas páginas e cada help era traduzido para uma dezena de idioma.
Teria que abrir arquivo por arquivo, localizar um trecho do código
específico e substituir por outro trecho específico também. No mesmo
momento acendeu aquela &lt;em&gt;lâmpada&lt;/em&gt; de uma nova ideia!&lt;/p&gt;
&lt;p&gt;No mesmo período eu estava com um projeto pessoal sendo desenvolvido em
Python/Django e eu vivo constantemente pesquisando e &lt;em&gt;brincando&lt;/em&gt; com
Python sempre que posso. Tendo em vista a tarefa que precisava ser
feita, pensei: "por que não usar Python pra isso?". Eu poderia, claro,
ter usado qualquer outra linguagem, poderia ter feito a tarefa na mão
(se fosse louco!), poderia ter feito de conta que a tarefa não existia
(o que já vi acontecer em empregos por ai), mas não! Resolvi criar a
minha oportunidade em codificar em Python.&lt;/p&gt;
&lt;p&gt;Em alguns minutos já tinha meu ambiente Windows preparado para rodar
Python e versionar meu projeto no Github. Mais alguns minutos depois eu
tinha o script pronto! Bastava um comando no cmd do Windows passando
como argumento o diretório base dos arquivos .html, o caracter que
deveria ser removido e o caracter que seria inserido. O help estava
versionado então eu rodei o script de primeira, sem medo, para ver o que
dava e não é que funcionou?! O script em questão segue abaixo e também
pode ser acessado no &lt;a href="https://github.com/cacarrara/py_scripts/blob/master/replace_in_all_files.py" title="Github do Caio Carrara python scripts"&gt;meu Github&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8  &lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;replace_in_all_files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent_folder_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldChar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newChar&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Replace the oldChar for newChar in all text  &lt;/span&gt;
&lt;span class="sd"&gt;    files found in parent_folder_path and its children  &lt;/span&gt;
&lt;span class="sd"&gt;    directories.  &lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;  
    &lt;span class="n"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent_folder_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filenames&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
        &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent_folder_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
            &lt;span class="n"&gt;replace_in_all_files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldChar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newChar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="n"&gt;arq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent_folder_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="n"&gt;oldContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
            &lt;span class="n"&gt;arq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="n"&gt;arq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent_folder_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="n"&gt;newContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;oldContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="n"&gt;newContent&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oldChar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newChar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="n"&gt;arq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="n"&gt;arq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OK: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You need to inform all params: rootPath, oldChar, newChar&amp;quot;&lt;/span&gt;  
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
    &lt;span class="n"&gt;rootPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  
    &lt;span class="n"&gt;oldChar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  
    &lt;span class="n"&gt;newChar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  
    &lt;span class="n"&gt;replace_in_all_files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rootPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldChar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newChar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Independente da qualidade do código, da performance, se seguiu ou não os
padrões, o importante é manter em mente que todo momento é o momento
certo para aprender e fazer algo novo. Não compensa ficar esperando até
que apareça o momento certo, mas sim fazer de cada momento o certo para
você.&lt;/p&gt;
&lt;p&gt;Grande abraço e foco nos estudos pessoal!&lt;/p&gt;</content><category term="carreira"></category><category term="python"></category></entry><entry><title>Regras de negócio usando Domain Driven Design</title><link href="/regras-de-negocio-usando-domain-driven-design.html" rel="alternate"></link><published>2014-02-02T12:59:00-02:00</published><updated>2014-02-02T12:59:00-02:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-02-02:/regras-de-negocio-usando-domain-driven-design.html</id><summary type="html">&lt;p&gt;O objetivo desse post não é explicar o Domain Driven Design, mas sim tentar ajudar a desmistificar uma dúvida que pode ser recorrente dos que começam a desenvolver software orientado ao domínio: como organizar a lógica de negócio evitando o modelo anêmico.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Aos que ainda não conhecem o conceito de &lt;a href="http://en.wikipedia.org/wiki/Domain-driven_design" title="Domain Driven Design Wikipedia"&gt;Domain Driven Design
(DDD)&lt;/a&gt;,
sugiro que busquem conhecer o quanto antes (pode começar pela indicação
de livro no final do post). O objetivo desse post não é explicar o DDD
(talvez em um próximo post), mas sim tentar ajudar a desmistificar uma
dúvida que pode ser recorrente dos que começam a desenvolver software
orientado ao domínio.&lt;/p&gt;
&lt;p&gt;A base do DDD diz que o desenvolvimento de uma solução de software deve
ser feito respeitando-se algumas camadas para a organização da solução:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Camada de Apresentação:&lt;/strong&gt; é a famosa "interface com o
    usuário". Essa camada é a responsável por apresentear as informações
    ao usuário e interpretar os comandos do mesmo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Aplicação:&lt;/strong&gt; essa deve ser uma fina camada que coordena
    as atividades da aplição. Aqui não deve haver lógica de negócio
    envolvida.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Domínio:&lt;/strong&gt; essa é a camada que possui as informações do
    domínio e deve ser considerada o "coração" da solução.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Infraestrutura:&lt;/strong&gt; essa camada deve atuar como uma camada
    de suporte para as demais. Uma provedora da interligação entre as
    camadas, implementar a persistência dos objetos do negócio e conter
    as bilbiotecas de suporte.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentro da Camada de Domínio, onde realmente o DDD se foca, há ainda mais
alguns conceitos envolvidos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Entity:&lt;/strong&gt; objetos com uma identidade única;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value Objects:&lt;/strong&gt; objetos geralmente imutáveis, sem identidade,
    onde o que interessa é o seu valor. Geralmente objetos com valores
    iguais são considerados iguais;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aggregate:&lt;/strong&gt; coleções de objetos agrupados por uma entidade
    centralizadora;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service:&lt;/strong&gt; quando alguma operação não se enquadra em nenhuma
    entidades surgem os serviços;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repository:&lt;/strong&gt; abstração do grupo de todos os objetos do domínio de
    deterimnado tipo. Através do &lt;em&gt;Repository&lt;/em&gt; é possível realizar
    operações no grupo de objetos: adicionar, remover, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Factory:&lt;/strong&gt; padrão para se delegar a criação de objetos de domínio.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa foi uma apresentação simplista e rápida dos principais conceitos
envolvidos. Agora, quando alguns desenvolvedores se deparam com todo
esse novo universo de organização pode se perguntar onde, de fato,
implementar suas lógicas de negócio. Lembrando que lógica do negócio é
diferente da implementação do fluxo da aplicação (tarefas ou interação
com outros sistemas, por exemplo).&lt;/p&gt;
&lt;p&gt;Se considerar somente os padrões da camada de domínio pode-se muito
facilmente concluir que a implementação de um software segundo esses
padrões acarretará o &lt;em&gt;anti-pattern&lt;/em&gt; Modelo de Domínio Anêmico. Nesse
&lt;em&gt;anti-pattern&lt;/em&gt; as entidades possuem somente estados (atributos) e nenhum
comportamento (métodos). Nas palavras do &lt;a href="http://martinfowler.com/" title="Martin Fowler site"&gt;Martin
Fowler&lt;/a&gt; &lt;a href="http://martinfowler.com/bliki/AnemicDomainModel.html" title="Anemic Domain Model by Martin Fowler"&gt;&lt;em&gt;bags of getters
and
setters&lt;/em&gt;&lt;/a&gt;.
Nesse modelo as entidades não possuem quaisquer lógicas de negócio,
essas ficam abrigadas em classes estritamente de serviços, onde a sua
responsabilidade é fornecer as lógicas de negócio.&lt;/p&gt;
&lt;p&gt;Dentre outros problemas, melhor apresentados no &lt;a href="http://martinfowler.com/bliki/AnemicDomainModel.html" title="Anemic Domain Model by Martin Fowler"&gt;artigo do
Fowler&lt;/a&gt;,
com o Modelo de Domínio Anêmico corre-se um risco eminete de se perder
os princípios da orientação a objetos e tornar as classes de serviços
meras aberrações procedurais. Infortunadamente os problemas práticos
dessa abordagem só são percebidos no decorrer da manutenção do software.&lt;/p&gt;
&lt;p&gt;Assim sendo, de maneira alguma o DDD prevê o Modelo Anêmico, muito pelo
contrário, com o DDD as Entities não são restritas a estados. Da mesma
forma que um bom design de projeto orientado a objetos, um projeto DDD
deve detectar as entidades do domínio &lt;strong&gt;e os comportamentos das
entidades de domínio.&lt;/strong&gt; Se uma entidade possui seus atributos e
comportamentos bem definidos, não há porquê separá-los na implementação,
de forma que uma entidade no DDD pode (e deve) possuir, além de seus
atributos, seus comportamentos com as regras de negócios envolvidas.&lt;/p&gt;
&lt;p&gt;Porém não deve-se com isso fazer com que a implementação do domínio
distorça o domínio real. Ao se analisar os problemas a serem resolvidos
pela implementação e tentar definir os objetos do modelo, muito
facilmente haverão alguns aspectos e comportamentos que não serão
facilmente associados a nenhum objeto do modelo. Para as ações "orfãs"
de objetos do modelo é que existem os &lt;strong&gt;Services&lt;/strong&gt;. Um exemplo básico é
a operação de transferência de dinheiro de uma conta para outra. A ação
(método) de transferência pertence à conta de origem ou à conta de
destino? Aparentemente não faz sentido em nenhuma das duas, não é?&lt;/p&gt;
&lt;p&gt;Quando esse tipo de comportamento é detectado na análise da solução, a
melhor prática é implementá-lo como um serviço. A principal
resposabilidade de um Serviço é fornecer funcionalidades, que não são de
responsabilidade direta de qualquer objeto do modelo, para os próprios
objetos do modelo. Vale atentar ao fato de que, classes de serviço, como
quaisquer outras da solução, &lt;strong&gt;devem&lt;/strong&gt; seguir obrigatoriamente, os
princípios da orientação a objetos.&lt;/p&gt;
&lt;p&gt;Respondendo a pergunta do título do post: se a regra de negócio for
explicitamente parte de um comportamento de uma entidade do modelo,
então a regra deve ser implementada no comportamento da entidade. Agora,
se a regra de negócio não pertence claramente a qualquer objeto do
modelo, então deve-se estudar e analisar muito bem a criação de um
Serviço que ofereça determinada funcionalidade que implemente a devida
regra de negócio.&lt;/p&gt;
&lt;p&gt;Links úteis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quer saber mais de DDD? &lt;a href="http://www.infoq.com/minibooks/domain-driven-design-quickly" title="Domain Driven Design Quickly"&gt;Domain Driven Design
    Quickly&lt;/a&gt;
    por Abel Avram &amp;amp; Floyd Marinescu.&lt;/li&gt;
&lt;li&gt;Quer saber mais sobre Arquitetura de software: &lt;a href="http://www.arquiteturajava.com.br/" title="Introdução à Arquitetura e Design de Software"&gt;Introdução à
    Arquitetura e Design de
    Software&lt;/a&gt;,
    Paulo Siveira, Guilherme Silveira, et al.&lt;/li&gt;
&lt;/ul&gt;</content><category term="arquitetura"></category><category term="desenvolvimento"></category><category term="java"></category></entry></feed>