<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Caio Carrara - dev</title><link href="/" rel="alternate"></link><link href="/feeds/dev.atom.xml" rel="self"></link><id>/</id><updated>2018-04-12T00:30:00-03:00</updated><entry><title>Do Python ao Infinito e Além!</title><link href="/do-python-ao-infinito-e-alem.html" rel="alternate"></link><published>2018-04-12T00:30:00-03:00</published><updated>2018-04-12T00:30:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2018-04-12:/do-python-ao-infinito-e-alem.html</id><summary type="html">&lt;p&gt;Muitas pessoas tem me perguntado como começar a estudar Python ou mesmo o que precisa aprender para arrumar um emprego e trabalhar com Python a maior parte do tempo. Com as experiências me relacionando com essas pessoas que desejam iniciar no desenvolvimento Python e na programação de uma forma mais ampla, percebo que o foco ainda está um pouco limitado sobre o que realmente significa trabalhar com desenvolvimento de software hoje em dia. Pensando em explorar um pouco esse tema vamos fazer uma viagem que irá do Python ao Infinito e Além!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Estando trabalhando com Python por pelo menos os últinos 5 anos e envolvido com
a comunidade, é comum aparecer diversas pessoas me perguntando como aprender
Python, como começar a aprender ou mesmo até como encontrar um trabalho em que
possa utilizar Python no dia-a-dia. Cada uma dessas perguntas possuem uma
resposta diferente, mas que na realidade independem da linguagem de programação
ou tecnologia que quer aprender ou com a qual quer trabalhar. Além disso, em
especial ao questionamento sobre o trabalho com Python, vale a ressaltar que
Python é uma pequena parte das exigências para de fato trabalhar com Python.&lt;/p&gt;
&lt;h2&gt;Começando estudar Python&lt;/h2&gt;
&lt;p&gt;Gostaria de começar falando primeiro sobre o questionamento que se refere a como
aprender determinada coisa, no nosso caso, a linguagem de programação Python.
Essa é uma questão complexa de responder absolutamente porque varia de acordo
com o perfil de cada pessoa. Há aqueles que aprendem melhor lendo um livro do
começo ao fim, outros que aprendem melhor indo capítulo a capítulo do livro não
necessariamente em uma ordem, outros preferem assistir uma série de vídeo aulas
ou talvez até se debruçar sobre a própria documentação da linguagem.&lt;/p&gt;
&lt;p&gt;Independente qual seja o método de aprendizagem mais indicado para cada pessoa,
uma das vantagens do Python é a abundância de material em diversos formatos. Há
incontáveis livros estritamente sobre a linguagem Python ou mesmo envolvendo
outros assuntos com aplicações e exemplos em Python. Algumas sugestões são:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pense em Python. Downey, Allen – um livro que ensina programação para quem
  nunca programou, usando Python nos exemplos. Possui edição física  do livro ou
  acesso gratutito através do site &lt;a href="https://penseallen.github.io/PensePython2e/"&gt;Pense em
  Python&lt;/a&gt;; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python para Desenvolvedores. Borges, Luiz Eduardo – um livro com abordagem
  simples e linguagem direta. Uma ótima escolha para quem está começando com
  Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Fluente. Ramalho, Luciano – um dos melhores livros de Python lançado
  recentemente, aclamado tanto nacionalmente quanto internacionalmente. É a
  escolha certa para quem quer aprofundar o conhecimento em Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Python. Lutz, Mark – livro para quem já sabe programar e gostaria de
  não ter somente uma abordagem superficial da linguagem. Um dos livros mais
  completos, porém não complexo para quem está começando estudar Python. O livro
  é antigo mas as ultimas edições já possui exemplos em Python 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate the Boring Stuff with Python. Sweigart, Al – livro também para quem
  já sabe programar e gosta de estudar com uma abordagem mais prática. Nunca li,
  mas já ouvi boas recomendações.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Outra possibilidade é aprender Python através de cursos online. Ainda que haja
diversas opções dessa modalidade disponíveis, aqui vale ressaltar o belo
trabalho do professor  Fernando Massanori: o curso &lt;a href="https://www.pycursos.com/python-para-zumbis/"&gt;Python para
Zumbis&lt;/a&gt;. O curso é completamente
gratuito e vai desde as mais simples regras sintáticas de Python até programação
orientada a objetos além de diversos outros apêndices com outros temas.&lt;/p&gt;
&lt;p&gt;Eu costumo dizer que programação é um ofício ao mesmo tempo prático e
intelectual. Uma pessoa se torna ótima programadora quando dedica tempo para
estudos teóricos com livros, cursos e até mesmo conversas com colegas, mas
também que dedique uma considerável parcela do tempo programando. Assim sendo,
não limite-se as leituras e pratique! O próprio curso Python para Zumbis possui
alguns exercícios interessantes. Outra opção é uma página na wiki da associação
Python Brasil com centenas de exercícios separadas por temas como estrturas
sequenciais, estruturas de repetição, operação com arquivos, classes, etc. A
lista pode ser encontrada na &lt;a href="https://wiki.python.org.br/ListaDeExercicios"&gt;wiki da Python
Brasil&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A partir do momento que os tipos de exercícios de cursos de programação, como os
que foram sugeridos acima, começarem a se tornar monótonos, há um próximo passo
a seguir. Há diversas plataformas para exercitar a prática de programação de
modo geral, independente da linguagem de programação escolhida.Muitas dessas
plataformas são integradas com outras de busca de emprego, o que pode inclusive
ajudar a busca do primeiro emprego com Python. Um dos exemplos mais expoentes
dessas soluções é o &lt;a href="www.hackerrank.com"&gt;Hacker Rank&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como tantas outras atividades que podemos desempenhar, programar é uma das que a
prática também ajuda alcançar a perfeição. Portanto tenha constância nos estudos
e não se limite somente a leituras; PROGRAME!&lt;/p&gt;
&lt;p&gt;Ainda que o conteúdo e atividades sugeridos para estudo até agora já sejam o
suficiente para ocupar alguém por muito tempo (anos!), tenho uma realidade um
pouco dura para lhe apresentar. Absorvendo e dominando todo esse conhecimento,
você ainda será uma pessoa limitada profissionalmente. Isso porque o mercado
moderno de desenvolvimento de software não exige somente o conhecimento
aprofundado de uma linguagem de programação, mas de várias. Ainda dentro do
mesmo contexto de uma tecnologia, como Python, há diversas outras bibliotecas e
frameworks para se dominar visando tonar um profissional de relevância.&lt;/p&gt;
&lt;h2&gt;Conhecendo o Infinito&lt;/h2&gt;
&lt;p&gt;Independente do sub-segmento da programação que desejar se dedicar, uma coisa é
certa: você irá ter que dominar o planejamento e implementação de testes
automatizados. Por si só, a área de testes de software é imensa, sem contar
todas as disciplinas englobadas dentro do contexto de Quality Assurance. Porém
há uma considerável parcela dessas disciplinas que todo  profissional de
desenvolvimento de software precisa dominar.&lt;/p&gt;
&lt;p&gt;Um dos destaques da linguagem Python é que ela já vem com as chamadas “bateriras
inclusas”. São as bibliotecas padrão da linguagem. Dentre elas há o framework
para testes unitários, por exemplo. Uma boa leitura é a &lt;a href="https://docs.python.org/3.5/library/unittest.html"&gt;própria documentação do
unittest&lt;/a&gt; para quem já tem
alguma noção de testes unitários .  Porém o framework padrão de Python para
testes unitários não é a única opção. Existe uma alternativa, bastante utilizada
dentro do ecossistema Python, que é a biblioteca pytest. Uma leitura recomendada
pode ser o livro:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python Testing with pytest. Okken, Brian&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma outra característica marcante da linguagem Python é a sua simplicidade
sintática e foco na legibilidade das pessoas que a utiliza. Esse é um dos
fatores da comunidade Python possuir pessoas das mais variadas áreas do
conhecimento e não somente da computação. É comum em conferências nacionais e
internacionais sobre Python encontrarmos estatísticos, biólogos, geólogos,
jornalistas, dentre outros profissionais. Ou seja, sabendo programar em Python
um profissional pode atuar em diversos segmentos e com diversas abordagens da
computação moderna: data science, data mining, web scrapping, business
intelligence, desenvolvimento web e de sistemas distribuídos, entre outros.&lt;/p&gt;
&lt;p&gt;Dentro de cada uma das áreas de atuação citadas, há um universo vasto para ser
explorado no quesito de conhecimento e ferramentas. Python pode ser uma das
ferramentas fundamentais, mas para alcançar sucesso há diversas outras que
precisam ser conhecidas e dominadas. Tomando como exemplo o segmento de
desenvolvimento web, há vários framworks Python, por exemplo. Com destaque para
Django, Flask, Pyramid e Bottle, para citar alguns. Se formos considerar outras
ferramentas como CMS, a lista cresce em proporções altíssimas.&lt;/p&gt;
&lt;p&gt;Apesar de super breve, a ideia aqui é ilustrar que “só saber Python” não é
suficiente. Há diversas disciplinas e ferramental que precisam ser dominados
para de fato se tornar um profissional produtivo e atuante dentro do segmento
escolhido.&lt;/p&gt;
&lt;h2&gt;Indo Além&lt;/h2&gt;
&lt;p&gt;Mais uma vez não custa lembrar. Trabalhar ou se divertir programando em Python,
ainda assim é programar. Mais do que nunca o ofício de se desenvolver software
tem se popularizado cada vez mais, seja por parecer uma atividade divertida,
necessária ou mesmo por dar a impressão de ser uma profissão lucrativa.
Considerando o mercado de trabalho brasileiro, de fato várias dessas suposições
podem ser verdadeiras, ainda que hajam muitas exceções.&lt;/p&gt;
&lt;p&gt;Seja com Python ou com qualquer outra linguagem de programação, é importante
lembrar que a atividade de desenvolvimento de software não é uma atividade
trivial como algumas peças publicitárias podem dar a entender. Python (na minha
opinião, claro), facilita muito a tarefa de codificar, porém para codificar é
necessário antes ter a ideia do software. Essa ideia precisa estar minimamente
estruturada e organizada de modo que seja possível comunicá-la. Dentro de um
ambiente corporativo será necessário compartilhar a sua ideia com um time,
exercitar suas habilidade de convencimento e de comunicação. Ainda que esteja em
um trabalho pontualmente sozinho, suas ideias precisam ser organizadas de tal
forma que você consiga comunicar para o computador em formato de um código
fonte. Ainda que isso pareça trivial, na prática é um grande desafio
considerando as dimensões de problemas reais que precisam ser solucionados.&lt;/p&gt;
&lt;p&gt;Além do exercício intelectual, criativo e de comunicação descrito acima,
desenvolver software também é uma atividade de sucessivas tomadas de decisão.
Seja um profissional de nível iniciante, intermediário ou avançado, a tomada de
decisão está presente diariamente no cotidiano peofissional do desenvolvimento
de software. Seja decidindo a arquitetura de uma nova solução, a melhor
implementação dentre as diversas possíveis para um problema, seja decidindo a
ordem que as tarefas serão executadas pelo time ou por você mesmo, decisões
estão em todo lugar a todo momento. Saber lidar com essa necessidade, analisar
os riscos e os benefícios, conhecer padrões de pessoas que já passaram por
momentos semelhantes e, mais importante, aprender a lidar com os erros de uma
tomada de decisão, é crucial para uma evolução saudável profissionalmente.&lt;/p&gt;
&lt;p&gt;Estamos em um momento da nossa história como sociedade e como profissionais onde
ao mesmo tempo que vemos &lt;a href="https://tecnoblog.net/233812/spacex-falcon-heavy-tesla-espaco/"&gt;carros no
espaço&lt;/a&gt;,
foguetes pousando, também vemos um carro autônomos &lt;a href="https://carros.uol.com.br/noticias/reuters/2018/03/19/mulher-morre-apos-ser-atropelada-por-suv-autonomo-do-uber-nos-eua.htm"&gt;tirar a vida de uma
pessoa&lt;/a&gt;
que andava de bicicleta. Não chegaríamos em nenhuma das situações se não fosse
pelo desenvolvimento de software e pelas atividades, e decisões, de diversos
programadores.  Principalmente quando estamos iniciando na área de programação
ou na carreira profissional, temos a falsa impressão de que nosso ofício diz
respeito sobre a criação de programas de computador e escrita de código fonte.
Talvez um dia de fato tenha sido, porém atualmente uma instrução escrita no
editor de texto, é uma decisão tomada, com todos as implicações e desafios
descritos acima.&lt;/p&gt;
&lt;p&gt;Programe em Python ou em qualquer outra linguagem. Mas entenda que desenvolver
software nos dias de hoje é uma atividade altamente complexa e com uma bagagem
de responsabilidade que, como comunidade de profissionais, ainda não aprendemos
a lidar.&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="carreira"></category></entry><entry><title>Palestra Software Crafsmanship na FATEC Sorocaba</title><link href="/palestra-software-craftsmanship-na-fatec-sorocaba.html" rel="alternate"></link><published>2014-10-09T10:00:00-03:00</published><updated>2014-10-09T10:00:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-10-09:/palestra-software-craftsmanship-na-fatec-sorocaba.html</id><summary type="html">&lt;p&gt;O Manifesto for Software Craftsmanship não é tão popular hoje em dia quanto o Agile Manifesto. Entretanto, acredito que os princípios defendidos pelo Craftsmanship são tão importantes quanto os do Agile.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Visando apresentar o Artesanato de Software, bem como alguns outros princípios
para os graduandos em Análise e Desenvolvimento de Sistemas da FATEC De
Sorocaba, no dia 08/10/2014 apresentei a palestra Artesanato de Software que
compartilho aqui agora.  &lt;/p&gt;
&lt;p&gt;O &lt;a href="http://manifesto.softwarecraftsmanship.org/"&gt;Manifesto for Software
Craftsmanship&lt;/a&gt; não é tão popular
hoje em dia quanto o &lt;a href="http://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt;. Entretanto,
acredito que os princípios defendidos pelo Craftsmanship são tão importantes
quanto os do Agile. Visando apresentar o &lt;em&gt;Artesanato de Software&lt;/em&gt;, bem como
alguns outros princípios para os graduandos em &lt;a href="http://fatecsorocaba.edu.br/topo/cursos/ads.asp"&gt;Análise e Desenvolvimento de
Sistemas da FATEC De Sorocaba&lt;/a&gt;,
no dia 08/10/2014 apresentei a palestra &lt;strong&gt;Artesanato de Software&lt;/strong&gt; que
compartilho aqui agora:  &lt;/p&gt;
&lt;script async class="speakerdeck-embed" data-id="9e019c8031df01327f262efaeef44115" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;</content><category term="desenvolvimento"></category><category term="craftsmanship"></category></entry><entry><title>Meu primeiro Hackathon</title><link href="/meu-primeiro-hackathon.html" rel="alternate"></link><published>2014-08-24T15:43:00-03:00</published><updated>2014-08-24T15:43:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-08-24:/meu-primeiro-hackathon.html</id><summary type="html">&lt;p&gt;Eu participei do meu primeiro Hackathon da Transparência Brasil. Foi uma experiência incrível e resolvi contar um pouco o que a ONG Transparência Brasil e a Sensedia fizeram lá na sede do Google Brasil.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ontem ocorreu o primeiro &lt;a href="http://dev.transparencia.org.br/api-portal/hackathon" title="Hackathon
transparência Brasil"&gt;Hackathon Transparência
Brasil&lt;/a&gt;. O evento foi realizado pela &lt;a href="http://transparencia.org.br/" title="Transparência Brasil"&gt;ONG Transparência
Brasil&lt;/a&gt; (TBrasil) em
conjunto com a &lt;a href="http://sensedia.com/br/" title="Sensedia"&gt;Sensedia&lt;/a&gt; e contou com o
apoio do Google Brasil que ofereceu toda a infra-estrutura para os participantes
em sua sede.&lt;/p&gt;
&lt;p&gt;"Hackathon" é uma palavra que nasceu da composição de duas outras em inglês:
&lt;em&gt;Hack&lt;/em&gt; e &lt;em&gt;Marathon&lt;/em&gt;, para designar eventos onde desenvolvedores de software -
não somente programadores, mas também designers, e gerentes de projetos -
juntam-se e colaboram intensivamente para a construção de projetos de software
e/ou hardware. Tradicionalmente Hackathons tem duração mínima de um dia mas
podem chegar até uma semana.  Os objetivos de um hackathon pode ser diverso,
para maior noção eu recomendo a leitura do &lt;a href="http://en.wikipedia.org/wiki/Hackathon"&gt;verbete hackathon na
Wikipedia&lt;/a&gt;. Mais do que simplesmente
programar, o termo inglês hack também designa exploração e descoberta.&lt;/p&gt;
&lt;p&gt;Descobrir como melhor utilizar os dados disponibilizados pelas APIs da
TBrasil foi justamente o intuito do Hackathon de ontem. As APIs abertas da
Transparência Brasil fornecem informações detalhadas e estatísticas sobre
candidatos a presidência, governo estadual, senado e de candidatos à reeleição,
além de informações sobre os  candidatos a deputado federal e estadual. Todos os
participantes do hackathon ganharam um Chromecast (dias contados para os caros
projetores!) e a equipe vencedora ganhou um Chromebook cada um. Os critérios
para o julgamento do melhor produto foram: impacto da proposta de valor,
qualidade do produto final e mérito técnico como forma de desempate.&lt;/p&gt;
&lt;p&gt;As inscrições para o Hackathon poderiam ser feitas por equipes previamente
formadas ou de forma individual. Eu me inscrevi individualmente e na hora foi
realizado sorteio para juntar os participantes que estavam sozinhos. Em um
primeiro momento eu me senti um pouco inseguro em partir para o meu primeiro
hackathon sozinho, mas ao final do dia eu só pude comprovar que foi o melhor que
poderia ter feito.&lt;/p&gt;
&lt;p&gt;Depois dos momentos "eu no Google" com poses para as fotos e do café da manhã
(com ovos e bacon!) começou a organização das equipes. A grande maioria já
estava formada previamente, mas houveram algumas que foram formadas no dia. A
minha equipe foi uma dessas.&lt;/p&gt;
&lt;p&gt;Éramos em quatro totalmente desconhecidos: &lt;a href="https://twitter.com/rafanunes" title="Rafael Nunes twitter"&gt;Rafael
Nunes&lt;/a&gt;, Julia, Taiolor
(sim, é o nome dele) e eu. Cada um com um histórico técnico e cultural diferente
o que fez com que além do desafio do próprio hackathon tivéssemos que também
descobrir como trabalhar juntos. Uma maratona de programação tende a requisitar
profissionais de alto desempenho, bem como equipes de alto desempenho, para que
consigam atingir os desafios propostos. Sabemos que equipes de alto desempenho
possuem como premissa um avançado grau de entrosamento, justamente o que não
tínhamos. Mas a ideia era superar desafio, então seguimos em frente!&lt;/p&gt;
&lt;p&gt;Em alguns minutos definimos uma ideia: disponibilizar uma forma com que os
eleitores pudessem selecionar um candidato, para qualquer cargo, de acordo com
alguns filtros que julgamos pertinentes. Para que não precisassem toda hora
filtrar para lembrar suas preferências, os usuários também poderiam marcar, de
forma privada, um candidato que lhe interessasse. Se a proposta era ajudar na
seleção do candidato, já definimos também o nome da equipe: Seleição! (que
criatividade einh!).  Logo em seguida precisávamos definir com qual tecnologia
implementaríamos a ideia, para minha alegria escolhemos Python!!!  Usaríamos a
plataforma do &lt;a href="https://cloud.google.com/products/app-engine/" title="AppEngine"&gt;AppEngine&lt;/a&gt; do Google para publicar.&lt;/p&gt;
&lt;p&gt;Mas nem tudo são flores, a equipe não tinha nenhum designer ou desenvolvedor
front-end. Porém, como iríamos utilizar o &lt;a href="http://jinja.pocoo.org/" title="Jinja
Pocoo"&gt;Jinja&lt;/a&gt; como template engine e eu tinha o conhecimento de Jinja e um pouco de
&lt;a href="http://getbootstrap.com/" title="Bootsstrap"&gt;bootstrap&lt;/a&gt;, acabei ficando com a árdua
tarefa! hahaha. Então já tinhamos a divisão das tarefas: o Rafael com a
comunicação do nosso aplicativo com a API da TBrasil, eu mostrando os dados na
tela e interação do usuário, a Julia me disponibilizando alguns end points e o
Taiolor pensando nos filtros e desenhando a estrutura das páginas. Foi assim
praticamente o dia todo e é impressionante a sensação da passagem do tempo em um
ambiente desses.  Particularmente eu nem senti o tempo passar.&lt;/p&gt;
&lt;p&gt;Ao final do dia estávamos com um início de aplicativo rodando e conseguimos
apresentar muito bem! Chegamos a publicar em
&lt;a href="http://seleicao.appspot.com/"&gt;seleicao.appspot.com&lt;/a&gt;, mas quando rodamos um job
para popular nosso datastore estouramos o limite (free) de escrita no AppEngine
=P. Todo histórico do nosso trabalho e o código fonte está no
&lt;a href="https://github.com/rafaelnunes/seleicao" title="Github Seleição"&gt;GitHub&lt;/a&gt;
também. Fizemos um ótimo trabalho juntos e colaboramos intensivamente para
algo minimamente utilizável que consumia as APIs da TBrasil. Meu objetivo estava
concluído!&lt;/p&gt;
&lt;p&gt;A premiação, em minha opinião, foi justa! Ganhou uma equipe que desenvolveu um
&lt;a href="https://chrome.google.com/webstore/detail/greenhouse/ifomhmgandipmpnelclcmbefppopfklc?hl=en" title="Greenhouse chrome extension"&gt;Greenhouse&lt;/a&gt; mas com os dados da TPBrasil. Uma ferramenta de
fácil acesso e que pode ajudar muito o eleitor sem muitos esforços para a
utilização.&lt;/p&gt;
&lt;p&gt;Como falei, ao final do dia eu pude voltar para casa muito satisfeito, muito
mais do que se eu tivesse ido com uma equipe formada. Eu não voltei com um
Chromebook na bagagem, mas voltei com história pra contar.  Mais do que isso, eu
conheci, interagi, colaborei e trabalhei com gente diferente e com histórias
contrastantes e muito legais! Eu poderia ter formado uma equipe, mas preferi ir
pra conhecer e programar com gente desconhecida. Conhecer novas ideias e trocar
experiências. Para ficar ainda melhor tudo isso ocorreu com muito &lt;em&gt;self&lt;/em&gt;
explícito!&lt;/p&gt;
&lt;p&gt;Quem tiver a oportunidade de participar de um Hackathon, não deixe passar! E se
não estiver tão interessado na premiação, vá sozinho, de mente aberta e disposto
a fazer coisas que não faz geralmente. Pense em uma ideia na hora, colabore e
trabalhe arduamente para fazer algo funcional.&lt;/p&gt;
&lt;p&gt;Para encerrar, só posso dizer que foi fenomenal! A cada dia eu gosto mais de
Python pela facilidade que a linguagem me dá em expressar a ideia do software
que tenho na mente sem deixar de produzir software de ótima qualidade. O
dia-a-dia de um desenvolvedor sério e ético já é muito difícil, ter ainda mais
dificuldade de colocar suas ideias em formato de código é inadmissível! Python e
a comunidade envolvida possibilitam que essa dificuldade seja muito menor.&lt;/p&gt;
&lt;p&gt;Obrigado TBrasil, Sensedia, Google Brasil e em especial Rafael Nunes, Julia e
Taiolor!&lt;/p&gt;
&lt;p&gt;Nos vemos no próximo Hackathon!&lt;/p&gt;</content><category term="appengine"></category><category term="hackathon"></category><category term="python"></category></entry><entry><title>[Dica] Instalando PostgreSQL no Fedora 19</title><link href="/instalando-postgresql-no-fedora-19.html" rel="alternate"></link><published>2014-04-02T22:00:00-03:00</published><updated>2014-04-02T22:00:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-04-02:/instalando-postgresql-no-fedora-19.html</id><summary type="html">&lt;p&gt;Esse post tem como objetivo ficar de nota para posterior registro de como instalar o PostgreSQL no Fedora 19.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fala ai galera! Beleza?&lt;/p&gt;
&lt;p&gt;Hoje trago uma dica rápida e que não é bem muita novidade, mas é sempre últil
ter um guia rápido assim quando queremos fazer uma nova instalação. Aqui irei
considerar a minha distribuição Linux favorita, o Fedora, mas pode ajudar para
as demais distros também.&lt;/p&gt;
&lt;p&gt;Primeiro, baixe e instale os pacotes do PostgreSQL (lembrando que o símbolo #
indica prompt com nível root):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# yum install postgresql postgresql-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Terminando a instalação, vamos iniciar o banco de dados, habilitar e iniciar o
serviço do PostgreSQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# postgresql-setup initdb  &lt;/span&gt;
&lt;span class="c1"&gt;# systemctl enable postgresql.service  &lt;/span&gt;
&lt;span class="c1"&gt;# systemctl start postgresql.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora vamos acessar o prompt com o usuário &lt;em&gt;postgres &lt;/em&gt;para podermos cadastrar
uma senha para esse usuário na base:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# su postgres&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos agora iniciar o prompt do PostgreSQL e cadastrar uma senha para a ROLE
&lt;em&gt;postgres&lt;/em&gt; e sair:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pgsql  
$ postgres: ALTER ROLE postgres WITH ENCRYPTED PASSWORD &lt;span class="s1"&gt;&amp;#39;suasenha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
$ postgres: &lt;span class="se"&gt;\\&lt;/span&gt;q  
$ &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assim voltamos para o prompt root, vamos mudar o método de autenticação do banco
para utilizarmos md5. Basta editar o arquivo &lt;em&gt;&lt;code&gt;/var/lib/pgsql/data/pg_hba.conf&lt;/code&gt;&lt;/em&gt;
e mudar as configurações &lt;em&gt;peer &lt;/em&gt;e &lt;em&gt;ident&lt;/em&gt; para &lt;em&gt;md5&lt;/em&gt; conforme o exemplo abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# TYPE DATABASE USER ADDRESS METHOD&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;quot;local&amp;quot; is for Unix domain socket connections only local all all md5  &lt;/span&gt;
&lt;span class="c1"&gt;# IPv4 local connections:  &lt;/span&gt;
    host all all &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1/32 md5  
&lt;span class="c1"&gt;# IPv6 local connections:  &lt;/span&gt;
    host all all ::1/128 md5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Salve o arquivo e reinicie o serviço do PostgreSQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl restart postgresql.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É possível testar a nova configuração tentando acessar o console do PostgreSQL
com o usuário postgres:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pgsql -U postgres -W&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vai ser solicitada a senha. Informando-a, caso consiga acesso ao prompt, a
configuração está completa.&lt;/p&gt;
&lt;p&gt;É isso ai, abraço e até a próxima!&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="fedora"></category><category term="linux"></category><category term="postgresql"></category></entry><entry><title>Está funcionando? Não está bom!</title><link href="/esta-funcionando-nao-esta-bom.html" rel="alternate"></link><published>2014-02-19T23:15:00-03:00</published><updated>2014-02-19T23:15:00-03:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-02-19:/esta-funcionando-nao-esta-bom.html</id><summary type="html">&lt;p&gt;Desenvolver software profissionalmente, entre outras coisas, é entregar satisfação ao usuário e atender necessidades de clientes. O trabalho visto dessa forma pode ser exercido de duas maneiras: proativa ou reativa. Nesse artigo eu falo um pouco sobre as duas maneiras.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eu ainda não posso dizer que sou um profissional tão experiente, afinal estou há
pouco mais de 3 anos atuando profissionalmente com desenvolvimento de software.
Nesse pouco tempo tive a oportunidade de passar por algumas empresas, conhecer
várias pessoas entre programadores, analistas e gerentes. Nessa pequena jornada
uma expressão que invariavelmente ouvi por onde passei é a famigerada: "está
funcionando? Então está bom!". Ou uma de suas variações mais famosas e a
preferida dos gerentes: "está funcionando?  Então não mexe!".&lt;/p&gt;
&lt;p&gt;Particularmente eu não tenho nada contra esse tipo de expressão, a não ser que
comece a se tornar cultura! Quando paro para pensar sobre a origem desse tipo de
comportamento eu imagino que possa ter surgido durante o período de estudos e
provas de algum indivíduo. Certamente alguém teve a brilhante ideia de parar de
mexer em algum programa / projeto assim que ele passou a funcionar. Talvez esse
comportamento não pareça ser tão ruim, e até faça algum sentido, quanto estamos
fazendo algoritmos didáticos ou programas básicos "para passar em uma matéria",
mas quando essa praga de pensamento contamina o ambiente de desenvolvimento
profissional, pode ser prejudicial demais!&lt;/p&gt;
&lt;p&gt;Desenvolver software profissionalmente, entre outras coisas, é entregar
satisfação ao usuário e atender necessidades de clientes. O trabalho visto dessa
forma pode ser exercido de duas maneiras: proativa ou reativa.&lt;/p&gt;
&lt;p&gt;A forma reativa de trabalhar é a forma com que a grande maioria (sempre há
excessões) traz consigo desde os primeiros anos de escola. O aluno passivamente
deve absorver algum conceito e reativamente praticar alguns exercícios tentando
mostrar que o conceito foi absorvido.  Isso se torna tão natural ao futuro
profissional, que ao sair da faculdade tantos ainda se comportam dessa forma.
Durante muito tempo esse perfil pode ter sido suficiente para satisfazer o
mercado de desenvolvimento de software, mas aos poucos esses antiquados
profissionais vem sendo descartados pela seleção natural do mercado.&lt;/p&gt;
&lt;p&gt;Basicamente a forma proativa de se trabalhar com desenvolvimento é antecipando
inteligentemente e de forma objetiva as necessidades do produto de software.
Quando digo necessidades me refiro tanto àquelas requisitadas diretamente pelos
clientes, quanto àquelas inerentes da natureza do software: atender às
requisições de forma satisfatória, possuir pouco, ou nenhum, erro durante sua
execução, atender às necessidades de performance / disponibilidade, possuir boa
qualidade de código principalmente para a futura manutenabilidade e continuidade
do produto, possuir flexiblidade, dentre tantas outras. Colocando dessa forma
até parece algo simples, mas se atentar constantemente para esses cuidados
durante o dia-a-dia de trabalho enquanto tem que atender às necessidades do
negócio no qual o software está inserido não é fácil.  Requer dedicação,
prática e muito cuidado.&lt;/p&gt;
&lt;p&gt;Desenvolver software para o mundo real, que resolva problemas reais e seja usado
diretamente por pessoas, vai muito além de escrever código e resolver problemas
de lógica. Atualmente produtos de software envolvem muito mais complexidade que
não pode ser resolvida de forma exata, quem sabe um dia! O diferencial de um bom
desenvolvedor de software para os demais, dentre outras coisas, está na sua
capacidade de raciocínio, análise, criticidade, predição e contextualização do
problema.&lt;/p&gt;
&lt;p&gt;Um abraço e muitos estudos pra todos nós!&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="carreira"></category></entry><entry><title>Regras de negócio usando Domain Driven Design</title><link href="/regras-de-negocio-usando-domain-driven-design.html" rel="alternate"></link><published>2014-02-02T12:59:00-02:00</published><updated>2014-02-02T12:59:00-02:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2014-02-02:/regras-de-negocio-usando-domain-driven-design.html</id><summary type="html">&lt;p&gt;O objetivo desse post não é explicar o Domain Driven Design, mas sim tentar ajudar a desmistificar uma dúvida que pode ser recorrente dos que começam a desenvolver software orientado ao domínio: como organizar a lógica de negócio evitando o modelo anêmico.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Aos que ainda não conhecem o conceito de &lt;a href="http://en.wikipedia.org/wiki/Domain-driven_design" title="Domain Driven Design
Wikipedia"&gt;Domain Driven Design
(DDD)&lt;/a&gt;, sugiro que busquem conhecer o quanto antes (pode começar pela
indicação de livro no final do post). O objetivo desse post não é explicar o DDD
(talvez em um próximo post), mas sim tentar ajudar a desmistificar uma dúvida
que pode ser recorrente dos que começam a desenvolver software orientado ao
domínio.&lt;/p&gt;
&lt;p&gt;A base do DDD diz que o desenvolvimento de uma solução de software deve ser
feito respeitando-se algumas camadas para a organização da solução:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Camada de Apresentação:&lt;/strong&gt; é a famosa "interface com o
    usuário". Essa camada é a responsável por apresentear as informações
    ao usuário e interpretar os comandos do mesmo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Aplicação:&lt;/strong&gt; essa deve ser uma fina camada que coordena
    as atividades da aplição. Aqui não deve haver lógica de negócio
    envolvida.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Domínio:&lt;/strong&gt; essa é a camada que possui as informações do
    domínio e deve ser considerada o "coração" da solução.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de Infraestrutura:&lt;/strong&gt; essa camada deve atuar como uma camada
    de suporte para as demais. Uma provedora da interligação entre as
    camadas, implementar a persistência dos objetos do negócio e conter
    as bilbiotecas de suporte.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentro da Camada de Domínio, onde realmente o DDD se foca, há ainda mais alguns
conceitos envolvidos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Entity:&lt;/strong&gt; objetos com uma identidade única;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value Objects:&lt;/strong&gt; objetos geralmente imutáveis, sem identidade,
    onde o que interessa é o seu valor. Geralmente objetos com valores
    iguais são considerados iguais;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aggregate:&lt;/strong&gt; coleções de objetos agrupados por uma entidade
    centralizadora;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service:&lt;/strong&gt; quando alguma operação não se enquadra em nenhuma
    entidades surgem os serviços;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repository:&lt;/strong&gt; abstração do grupo de todos os objetos do domínio de
    deterimnado tipo. Através do &lt;em&gt;Repository&lt;/em&gt; é possível realizar
    operações no grupo de objetos: adicionar, remover, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Factory:&lt;/strong&gt; padrão para se delegar a criação de objetos de domínio.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa foi uma apresentação simplista e rápida dos principais conceitos
envolvidos. Agora, quando alguns desenvolvedores se deparam com todo esse novo
universo de organização pode se perguntar onde, de fato, implementar suas
lógicas de negócio. Lembrando que lógica do negócio é diferente da implementação
do fluxo da aplicação (tarefas ou interação com outros sistemas, por exemplo).&lt;/p&gt;
&lt;p&gt;Se considerar somente os padrões da camada de domínio pode-se muito facilmente
concluir que a implementação de um software segundo esses padrões acarretará o
&lt;em&gt;anti-pattern&lt;/em&gt; Modelo de Domínio Anêmico. Nesse &lt;em&gt;anti-pattern&lt;/em&gt; as entidades
possuem somente estados (atributos) e nenhum comportamento (métodos). Nas
palavras do &lt;a href="http://martinfowler.com/" title="Martin Fowler site"&gt;Martin Fowler&lt;/a&gt;
&lt;a href="http://martinfowler.com/bliki/AnemicDomainModel.html" title="Anemic Domain
Model by Martin Fowler"&gt;&lt;em&gt;bags of getters and
setters&lt;/em&gt;&lt;/a&gt;.  Nesse modelo as entidades não possuem quaisquer
lógicas de negócio, essas ficam abrigadas em classes estritamente de serviços,
onde a sua responsabilidade é fornecer as lógicas de negócio.&lt;/p&gt;
&lt;p&gt;Dentre outros problemas, melhor apresentados no &lt;a href="http://martinfowler.com/bliki/AnemicDomainModel.html" title="Anemic Domain
Model by Martin Fowler"&gt;artigo do
Fowler&lt;/a&gt;, com o Modelo de Domínio Anêmico corre-se um risco
eminete de se perder os princípios da orientação a objetos e tornar as classes
de serviços meras aberrações procedurais. Infortunadamente os problemas práticos
dessa abordagem só são percebidos no decorrer da manutenção do software.&lt;/p&gt;
&lt;p&gt;Assim sendo, de maneira alguma o DDD prevê o Modelo Anêmico, muito pelo
contrário, com o DDD as Entities não são restritas a estados. Da mesma forma que
um bom design de projeto orientado a objetos, um projeto DDD deve detectar as
entidades do domínio &lt;strong&gt;e os comportamentos das entidades de domínio.&lt;/strong&gt; Se uma
entidade possui seus atributos e comportamentos bem definidos, não há porquê
separá-los na implementação, de forma que uma entidade no DDD pode (e deve)
possuir, além de seus atributos, seus comportamentos com as regras de negócios
envolvidas.&lt;/p&gt;
&lt;p&gt;Porém não deve-se com isso fazer com que a implementação do domínio distorça o
domínio real. Ao se analisar os problemas a serem resolvidos pela implementação
e tentar definir os objetos do modelo, muito facilmente haverão alguns aspectos
e comportamentos que não serão facilmente associados a nenhum objeto do modelo.
Para as ações "orfãs" de objetos do modelo é que existem os &lt;strong&gt;Services&lt;/strong&gt;. Um
exemplo básico é a operação de transferência de dinheiro de uma conta para
outra. A ação (método) de transferência pertence à conta de origem ou à conta de
destino? Aparentemente não faz sentido em nenhuma das duas, não é?&lt;/p&gt;
&lt;p&gt;Quando esse tipo de comportamento é detectado na análise da solução, a melhor
prática é implementá-lo como um serviço. A principal resposabilidade de um
Serviço é fornecer funcionalidades, que não são de responsabilidade direta de
qualquer objeto do modelo, para os próprios objetos do modelo. Vale atentar ao
fato de que, classes de serviço, como quaisquer outras da solução, &lt;strong&gt;devem&lt;/strong&gt;
seguir obrigatoriamente, os princípios da orientação a objetos.&lt;/p&gt;
&lt;p&gt;Respondendo a pergunta do título do post: se a regra de negócio for
explicitamente parte de um comportamento de uma entidade do modelo, então a
regra deve ser implementada no comportamento da entidade. Agora, se a regra de
negócio não pertence claramente a qualquer objeto do modelo, então deve-se
estudar e analisar muito bem a criação de um Serviço que ofereça determinada
funcionalidade que implemente a devida regra de negócio.&lt;/p&gt;
&lt;p&gt;Links úteis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quer saber mais de DDD? &lt;a href="http://www.infoq.com/minibooks/domain-driven-design-quickly" title="Domain Driven Design Quickly"&gt;Domain Driven Design
    Quickly&lt;/a&gt;
    por Abel Avram &amp;amp; Floyd Marinescu.&lt;/li&gt;
&lt;li&gt;Quer saber mais sobre Arquitetura de software: &lt;a href="http://www.arquiteturajava.com.br/" title="Introdução à Arquitetura e Design de Software"&gt;Introdução à
    Arquitetura e Design de
    Software&lt;/a&gt;,
    Paulo Siveira, Guilherme Silveira, et al.&lt;/li&gt;
&lt;/ul&gt;</content><category term="arquitetura"></category><category term="desenvolvimento"></category><category term="java"></category></entry><entry><title>Java Code Style (eclipse formatter e clean up)</title><link href="/java-code-style-eclipse-formatter-e-clean-up.html" rel="alternate"></link><published>2013-12-21T10:41:00-02:00</published><updated>2013-12-21T10:41:00-02:00</updated><author><name>Caio Carrara</name></author><id>tag:None,2013-12-21:/java-code-style-eclipse-formatter-e-clean-up.html</id><summary type="html">&lt;p&gt;Além de pensarmos na qualidade do código que estamos entregando para a máquina compilar, interpretar e executar, também precisamos nos importar com a qualidade do código fonte que continuará existindo para manutenções futuras. Apresento nesse artigo uma proposta de estilo de código fonte Java e como o Eclipse pode ajudar nisso.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Um ponto importante, mas que nem sempre é tratado com a seriedade que merece, é
o code style dos projetos em que trabalhamos. Seja qual for a linguagem,
escrevemos comportamentos para a máquina, mas quem mantém, altera e melhora
esses comportamentos em formato de código são humanos.  Assim sendo, nada mais
importante do que pensar nisso quando estamos escrevendo código.  &lt;/p&gt;
&lt;p&gt;Graças as maravilhas do mundo moderno, os principais ambientes de
desenvolvimento para a plataforma Java já podem formatar e limpar o código pra
gente. No &lt;a href="http://www.eclipse.org/" title="Eclipse Website"&gt;Eclipse&lt;/a&gt;, foco desse post,
há duas funções básicas para isso: &lt;a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fpreferences%2Fjava%2Fcodestyle%2Fref-preferences-formatter.htm" title="Help Eclipse Preferences Code Formatter"&gt;Code
Formatter&lt;/a&gt; e &lt;a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fpreferences%2Fjava%2Fcodestyle%2Fref-preferences-cleanup.htm" title="Help Eclipse Preferences Clean Up"&gt;Code Clean
Up&lt;/a&gt;.  O Clean Up além da formatação,  faz mais
algumas coisas no código, exemplo: declara variável como &lt;em&gt;final&lt;/em&gt; quando
possível, adiciona o &lt;em&gt;this&lt;/em&gt; quando necessário, organiza &lt;em&gt;imports&lt;/em&gt;, etc. Ambos
são bastante configuráveis.&lt;/p&gt;
&lt;p&gt;Eu fiz um clean up meu, com base no que acho necessário. Eu sugeriria altamente
a todos que trabalham com Java também usassem essa função.  Podem configurar um
Clean Up com as preferências pertinentes ao projeto que estão trabalhando, ou
que a equipe de desenvolvedores ache melhor.  Se desejarem, um ponto de partida
pode ser o
&lt;a href="https://dl.dropboxusercontent.com/u/23404136/caio-eclipse-cleanup.xml" title="Arquivo Caio Eclipse Clean Up xml"&gt;caio-eclipse-cleanup.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Também fiz um formatter. O que fiz é praticamente igual ao &lt;a href="http://google-styleguide.googlecode.com/svn/trunk/javaguide.html" title="Code Style do Google para Java"&gt;Code Style do Google
para Java&lt;/a&gt;.  O que fiz foi alterar o espaço das
tabulações de 2 para 4 e a versão target do Java de 1.5 para 1.7. Todo o
formatador é configurável, mas o arquivo que estou usando também pode ser
utilizado como ponto de partida:
&lt;a href="https://dl.dropboxusercontent.com/u/23404136/eclipse-java-google-style.xml" title="Eclipse Java Formatter by Google edited by Caio"&gt;eclipse-java-google-style.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para usar os arquivos que disponibilizei é simples, após o download os mesmos
precisam ser importados para os workspaces onde serão utilizados:&lt;br&gt;
&lt;strong&gt;Code Formatter:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="letter-spacing: 0.05em;"&gt;Eclipse &gt; Window &gt;
    Preferences &gt; Java &gt; Code Style &gt; Formatter &gt; Import...&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Code Cleanup:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="letter-spacing: 0.05em;"&gt;Eclipse &gt; Window &gt;
    Preferences &gt; Java &gt; Code Style &gt; Clean Up &gt; Import...&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;No dia a dia eu uso muito os atalhos:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="letter-spacing: 0.05em;"&gt;&lt;strong&gt;Ctrl + Shift + F:&lt;/strong&gt; aplica a
    formatação definida no Formatter&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="letter-spacing: 0.05em;"&gt;&lt;strong&gt;Ctrl + Shift + O:&lt;/strong&gt; organiza
    os imports&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Com esses atalhos, aquele código escrito rapidamente para um teste, protótipo ou
mesmo exercício da faculdade, não tem mais desculpas para não ficar formatado
corretamente. Afinal, é muito rápido e fácil utilizá-los.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Para passar o Clean Up:&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Selecione um projeto, um pacote, um arquivo .java ou mesmo ctrl + a no arquivo
fonte, clique com o botão direito: Source &gt; Clean Up.&lt;/p&gt;
&lt;p&gt;É isso. Espero que o código, além de performático e muito bom para as máquinas,
também fique ótimo para ser lido pelos programadores!&lt;/p&gt;
&lt;p&gt;Abraço!&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="java"></category></entry></feed>